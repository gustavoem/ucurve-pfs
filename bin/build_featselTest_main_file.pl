#!/usr/bin/perl -w 

#
# build_featselTest_main_file.pl : program to generate the featselTest main file
#                                  taking into account the current set of 
#                                  available algorithms and cost functions.
#
#    This file is part of the featsel program
#    Copyright (C) 2016  Marcelo S. Reis
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;

my $date_string = localtime ();

#------------------------------------------------------------------------------#
# First, we load the lists of algorithms and cost functions.
#
my $list_of_cost_functions_file = "ListOfCostFunctions.txt";
my $list_of_algorithms_file = "ListOfAlgorithms.txt";

open (LIST, $list_of_cost_functions_file) or 
  die "Error: could not open $list_of_cost_functions_file for reading!\n";

my @list_of_function_codes;
my @list_of_function_class_names;

while (<LIST>)
{
  chomp $_;
  if ($_ =~ /^\s*(\w+)\s+(\w+)\s+/) # $1 == code, $2 == class name
  {  
    push @list_of_function_codes, $1;
    push @list_of_function_class_names, $2; 
  }
  elsif ($_ =~ /^\s*$/)
  {
    # Blank line; do nothing.
  }
  else
  {
    die "Error: could not parse line of $list_of_cost_functions_file!\n";
  }
}

close (LIST);

open (LIST, $list_of_algorithms_file) or 
  die "Error: could not open $list_of_algorithms_file for reading!\n";

my @list_of_algorithm_codes;
my @list_of_algorithm_class_names;

while (<LIST>)
{
  chomp $_;
  if ($_ =~ /^\s*(\w+)\s+(\w+)\s*$/) # $1 == code, $2 == class name
  {  
    push @list_of_algorithm_codes, $1;
    push @list_of_algorithm_class_names, $2; 
  }
  elsif ($_ =~ /^\s*$/)
  {
    # Blank line; do nothing.
  }
  else
  {
    die "Error: could not parse line of $list_of_algorithms_file!\n";
  }
}

close (LIST);

#------------------------------------------------------------------------------#

# Now we update featselTest.cpp
#
open (IN, "test/featselTest.tpp") or die "Could not open featselTest.tpp!\n";
open (OUT, ">test/featselTest.cpp") or die "Could not open featselTest.cpp!\n";

printf OUT "// featselTest.cpp automatically generated by $0\n" .
           "// in $date_string.\n\n";

while (<IN>)
{
  if ($_ =~ /\<COST\s+FUNCTION\s+TEMPLATE\s+1\>/)
  {
    foreach my $class_name (@list_of_function_class_names)
    {
      print OUT "#include \"functions/" . $class_name . "Test.h\"\n";
    }
  }
  elsif ($_ =~ /\<ALGORITHM\s+TEMPLATE\s+1\>/)
  {
    foreach my $class_name (@list_of_algorithm_class_names)
    {
      print OUT "#include \"algorithms/" . $class_name . "Test.h\"\n";
    }
  }
  elsif ($_ =~ /\<COST\s+FUNCTION\s+TEMPLATE\s+2\>/)
  {
    foreach my $index (0..$#list_of_function_codes)
    {
      print OUT "  //Testing class \"" . 
        $list_of_function_class_names[$index] . "\"\n  //\n";
      print OUT "  current_class = \"" .
        $list_of_function_class_names[$index] . "Test\";\n";
      open (HEADER, "test/functions/" . 
        $list_of_function_class_names[$index] . "Test.h")
        or die "Error: could not open header file of " .
        $list_of_function_class_names[$index] . " test namespace!\n";
      while (<HEADER>)
      {
        if ($_ =~ /^\s*bool\s+(\w+)\s*\(.*/)
        {
          print OUT "  result (\"" . $1 . "\",\n    " .
            $list_of_function_class_names[$index] . "Test::" .
            $1 . " ());\n";
        }
      }
      close (HEADER);
      print OUT "  cout << endl;\n\n";    
    }
  }
  elsif ($_ =~ /\<ALGORITHM\s+TEMPLATE\s+2\>/)
  {
    foreach my $index (0..$#list_of_algorithm_codes)
    {
      print OUT "  //Testing class \"" . 
        $list_of_algorithm_class_names[$index] . "\"\n  //\n";
      print OUT "  current_class = \"" .
        $list_of_algorithm_class_names[$index] . "Test\";\n";
      open (HEADER, "test/algorithms/" . 
        $list_of_algorithm_class_names[$index] . "Test.h")
        or die "Error: could not open header file of " .
        $list_of_algorithm_class_names[$index] . " test namespace!\n";
      while (<HEADER>)
      {
        if ($_ =~ /^\s*bool\s+(\w+)\s*\(.*/)
        {
          print OUT "  result (\"" . $1 . "\",\n    " .
            $list_of_algorithm_class_names[$index] . "Test::" .
            $1 . " ());\n";
        }
      }
      close (HEADER);
      print OUT "  cout << endl;\n\n";    
    }
  }
  else
  {
    print OUT $_;
  }
}

close (IN);
close (OUT);

#------------------------------------------------------------------------------#

# End of execution.
#
exit 0;   
